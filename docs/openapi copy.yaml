openapi: 3.1.0
info:
  title: Star Wars API
  description: API for interacting with Star Wars data.
  version: 1.0.0

paths:
  /films:
    get:
      summary: Retrieve a list of films
      description: Retrieve a list of films in the Star Wars universe.
      parameters:
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: "Filter films by title."
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: "Page number for pagination."
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: "Number of films per page."
      responses:
        "200":
          description: A list of films
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ok"
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Film"

  /films/{id}:
    get:
      summary: Retrieve a film's details by ID
      description: Retrieve the details of a specific film by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: "ID of the film."
      responses:
        "200":
          description: Film details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ok"
                  result:
                    $ref: "#/components/schemas/Film"

  /planets:
    get:
      summary: Get all planets
      description: Retrieve a list of planets in the Star Wars universe.
      operationId: getAllPlanets
      responses:
        "200":
          description: A list of planets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ok"
                  total_records:
                    type: integer
                    example: 60
                  total_pages:
                    type: integer
                    example: 6
                  next:
                    type: string
                    example: "https://swapi.tech/api/planets?page=2&limit=10"
                  previous:
                    type: string
                    nullable: true
                    example: null
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Planet"

  /planets/{id}:
    get:
      summary: Get a planet by ID
      description: Retrieve details about a specific planet by its ID.
      operationId: getPlanetById
      parameters:
        - name: id
          in: path
          description: The ID of the planet to retrieve.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Details of the planet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ok"
                  result:
                    $ref: "#/components/schemas/PlanetDetail"

components:
  schemas:
    Film:
      type: object
      properties:
        properties:
          type: object
          properties:
            title:
              type: string
              description: "Title of the film."
            episode_id:
              type: integer
              description: "Episode number of the film."
            director:
              type: string
              description: "Director of the film."
            producer:
              type: string
              description: "Producer of the film."
            release_date:
              type: string
              format: date
              description: "Film release date."
            opening_crawl:
              type: string
              description: "Opening crawl text of the film."
            url:
              type: string
              format: uri
              description: "URL of the film."
            characters:
              type: array
              items:
                type: string
                format: uri
              description: "List of URLs to characters appearing in the film."
            planets:
              type: array
              items:
                type: string
                format: uri
              description: "List of URLs to planets appearing in the film."
            starships:
              type: array
              items:
                type: string
                format: uri
              description: "List of URLs to starships appearing in the film."
            vehicles:
              type: array
              items:
                type: string
                format: uri
              description: "List of URLs to vehicles appearing in the film."
            species:
              type: array
              items:
                type: string
                format: uri
              description: "List of URLs to species appearing in the film."
          required:
            - title
            - episode_id
            - director
            - producer
            - release_date
            - opening_crawl
            - url
        description:
          type: string
          description: "Description of the film."
        _id:
          type: string
          description: "Unique ID of the film."
        uid:
          type: string
          description: "UID of the film."
        __v:
          type: integer
          description: "Version of the document (used in databases like MongoDB)."
      required:
        - properties
        - description
        - _id
        - uid
        - __v
    Planet:
      type: object
      properties:
        uid:
          type: string
          example: "1"
        name:
          type: string
          example: "Tatooine"
        url:
          type: string
          example: "https://www.swapi.tech/api/planets/1"

    PlanetDetail:
      type: object
      properties:
        properties:
          type: object
          properties:
            diameter:
              type: string
              example: "10465"
            rotation_period:
              type: string
              example: "23"
            orbital_period:
              type: string
              example: "304"
            gravity:
              type: string
              example: "1 standard"
            population:
              type: string
              example: "200000"
            climate:
              type: string
              example: "arid"
            terrain:
              type: string
              example: "desert"
            surface_water:
              type: string
              example: "1"
            created:
              type: string
              format: date-time
              example: "2024-12-17T15:23:44.809Z"
            edited:
              type: string
              format: date-time
              example: "2024-12-17T15:23:44.809Z"
            name:
              type: string
              example: "Tatooine"
            url:
              type: string
              example: "https://www.swapi.tech/api/planets/1"
        description:
          type: string
          example: "A planet."
        _id:
          type: string
          example: "5f7254c11b7dfa00041c6fae"
        uid:
          type: string
          example: "1"
        __v:
          type: integer
          example: 0
